syntax = "proto3";

package transaction;


service Transaction {
  rpc GetTransactions(TransactionRequest) returns (TransactionReply) {}
}

message TransactionRequest { string account_id = 1; }

message TransactionReply { repeated TransactionInformation transactions = 1; }

message TransactionInformation {
  string id = 1;
  string account_id = 2;
  int64 created = 3;
  string description = 4;
  int64 amount = 5;
  string currency = 6;
  string merchant = 7;
  string notes = 8;
  int64 settled = 9;
  string user_id = 10;
  bool is_load = 11;
  int64 updated = 12;
  int64 local_amount = 13;
  string local_currency = 14;
  bool include_in_spending =15; 
  bool can_be_excluded_from_breakdown =16; 
  bool can_be_made_subscription =17; 
  bool can_split_the_bill =18;
  bool can_add_to_tab =19; 
  bool amount_is_pending =20; 
  string decline_reason =21;
  string category = 22;
}